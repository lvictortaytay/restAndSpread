
// what does the following code return / print


// let facts = {numPlanets: 8, yearNeptuneDiscovered: 1846};
// let {numPlanets, yearNeptuneDiscovered} = facts;

// console.log(numPlanets); // 8
// console.log(yearNeptuneDiscovered); // 1846


//What does the following code return/print?

let planetFacts = {
  numPlanets: 8,
  yearNeptuneDiscovered: 1846,
  yearMarsDiscovered: 1659
};

let {numPlanets, ...discoveryYears} = planetFacts;

console.log(discoveryYears); // {yearNeptuneDiscovered: 1846,yearMarsDiscovered: 1659}



//What does the following code return/print?


function getUserData({firstName, favoriteColor="green"}){
  return `Your name is ${firstName} and you like ${favoriteColor}`;
}

console.log(getUserData({firstName: "Alejandro", favoriteColor: "purple"}) )// " your name is Alejandro and you like purple"
console.log(getUserData({firstName: "Melissa"})) // 'your name is Melissa and you like green"
console.log(getUserData({})) // your name is undefined and you like green

//What does the following code return/print?

let [first, second, third] = ["Maya", "Marisa", "Chi"];

console.log(first); // Maya
console.log(second); // Marisa
console.log(third); // chi


//what does the following code return / print?

let [raindrops, whiskers, ...aFewOfMyFavoriteThings] = [
    "Raindrops on roses",
    "whiskers on kittens",
    "Bright copper kettles",
    "warm woolen mittens",
    "Brown paper packages tied up with strings"
  ]
  
  console.log(raindrops); // Raindrops on roses
  console.log(whiskers); // Whiskers on kittens
  console.log(aFewOfMyFavoriteThings); // Bright copper kettles , warm woolen mittens , Brown paper packages tied up with strings


//What does the following code return/print?

let numbers = [10, 20, 30];
[numbers[1], numbers[2]] = [numbers[2], numbers[1]]

console.log(numbers) // [10,30,20]


//refactor this code into ES2015 standard code

var obj = {  //assining variables into object properties with ES2015 CODE
    numbers: {
      a: 1,
      b: 2
    }
  };
  
// the old way 

// let a = obj.numbers.a
// let b = obj.numbers.b

//the new way 
const {a,b} = obj.numbers


//refactor this ES5 code into ES2015 code
//array swap
var arr = [1, 2];
//the old way 
// var temp = arr[0];
// arr[0] = arr[1];
// arr[1] = temp;

// console.log(arr)


//the new way
[arr[0] , arr[1]] = [arr[1] , arr[0]]
console.log(arr)


//Write a function called raceResults which accepts a single array argument. It should return an object with the keys first, second, third, and rest.

const raceResults = ([first,second , third , ...rest]) => ({first , second ,third , rest})
